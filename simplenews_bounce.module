<?php

/**
 * Implemets hook_mail_alter().
 */
function simplenews_bounce_mail_alter(&$message) {
  // Add bounce handling features when enabled to simplenews mails.
  if (variable_get('simplenews_bounce_handling', 0)) {
    if ($message['id'] == 'simplenews_node' || $message['id'] == 'simplenews_test') {
      // Set the correct bounce e-mail address.
      $bounce_email = variable_get('simplenews_bounce_email_address', '');
      $message['headers']['Reply-To'] = $bounce_email;
      $message['headers']['Return-Path'] = $bounce_email;
      $message['headers']['Errors-To'] = $bounce_email;

      // @todo: Also try and do something useful when receipt requests are enabled
      if (variable_get('simplenews_receipt', 0)) {
        /*
         * $message['headers']['Return-Receipt-To'] = $bounce_email;
         * $message['headers']['Disposition-Notification-To'] = $bounce_email;
         * $message['headers']['X-Confirm-Reading-To'] = $bounce_email;
         */
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function simplenews_bounce_menu() {
  $items = array();

  $items['admin/settings/simplenews/bounce'] = array(
    'title' => 'Bounce handling',
    'description' => 'Settings to enable bounce handling for mails.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simplenews_bounce_admin'),
    'file' => 'simplenews_bounce.admin.inc',
    'access arguments' => array('administer mail bounce settings'),
  );

  return $items;
}

/**
 * Implements hook_perm
 */
function simplenews_bounce_perm() {
  $perms = array(
    'administer Simplenews Bounce settings',
    'view Simplenews Bounce reports'
  );

  return $perms;
}

function simplenews_bounce_cron() {
  if (variable_get('simplenews_bounce_handling', 0)) {
    // Include the PHPMailer-BHM library.
    $path = libraries_get_path('PHPMailer-BHM');
    define('_PATH_BMH', $path . '/'); // This constant is used by the PHPMailer-BHM library .
    require_once(_PATH_BMH . 'class.phpmailer-bmh.php');

    // Setup the bouncemailhandler to connect to the mailbox.
    $bmh = new BounceMailHandler();
    $bmh->action_function = 'simplenews_bounce_callback';
    $bmh->verbose = VERBOSE_QUIET;
    $bmh->mailhost = variable_get('simplenews_bounce_mailbox_mailhost', '');
    $bmh->mailbox_username = variable_get('simplenews_bounce_mailbox_username', '');
    $bmh->mailbox_password = variable_get('simplenews_bounce_mailbox_password', '');
    $bmh->port = variable_get('simplenews_bounce_mailbox_port', '143');
    $bmh->service = variable_get('simplenews_bounce_mailbox_service', 'imap');
    $bmh->service_option = variable_get('simplenews_bounce_mailbox_service_option', 'notls');
    $bmh->boxname = variable_get('simplenews_bounce_mailbox_boxname', 'INBOX');
    if (variable_get('simplenews_bounce_keep_unprocessed', 0)) {
      $bmh->purge_unprocessed = FALSE;
    }
    else {
      $bmh->purge_unprocessed = TRUE;
    }

    // Process the mailbox.
    $bmh->openMailbox();
    $bmh->processMailbox();
  }
}

function simplenews_bounce_callback($msgnum, $bounce_type, $email, $subject, $xheader, $remove, $rule_no = FALSE, $rule_cat = FALSE, $totalFetched = 0) {
  if (strstr($email, '<')) {
    $pos_start = strpos($email, '<');
    $pos_end = strpos($email, '>');
    $email = substr($email, $pos_start + 1);
    $email = substr($email, 0, $pos_end - 1);
  }
  $rule_no = intval($rule_no);

  $inserted = FALSE;
  $query = 'INSERT INTO {simplenews_bounce_mails} (rule_no, rule_cat, bounce_type, mail) VALUES (%d, "%s", "%s", "%s")';
  $inserted = db_query($query, $rule_no, $rule_cat, $bounce_type, $email);

  if ($inserted !== FALSE) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implementation of hook_views_api().
 */
function simplenews_bounce_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'simplenews_bounce'),
  );
}
